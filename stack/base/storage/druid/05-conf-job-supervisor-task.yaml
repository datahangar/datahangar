apiVersion: v1
kind: ConfigMap
metadata:
  name: druid-supervisor-task-config-map
  namespace: datahangar-stack
data:
  submit_supervisor_task.sh: |
    set +x
    sed "s/__KAFKA_USERNAME__/${KAFKA_USERNAME}/g" /tmp/supervisor-kafka-ingest-spec.json.template > /tmp/supervisor-kafka-ingest-spec.json
    sed -i "s/__KAFKA_PASSWORD__/${KAFKA_PASSWORD}/g" /tmp/supervisor-kafka-ingest-spec.json
    set -x
    curl -X POST -H 'Content-Type: application/json' -d @/tmp/supervisor-kafka-ingest-spec.json http://druid-cluster-coordinators:8088/druid/indexer/v1/supervisor
  supervisor-kafka-ingest-spec.json.template: |
    {
      "type": "kafka",
      "spec": {
        "ioConfig": {
          "type": "kafka",
          "consumerProperties": {
            "bootstrap.servers": "kafka-headless-service:9092",
            "security.protocol": "SASL_PLAINTEXT",
            "sasl.mechanism": "SCRAM-SHA-512",
            "sasl.jaas.config": "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"__KAFKA_USERNAME__\" password=\"__KAFKA_PASSWORD__\";"
          },
          "topic": "flowlogs",
          "inputFormat": {
            "type": "kafka",
            "valueFormat": {
              "type": "json"
            }
          },
          "useEarliestOffset": true,
          "appendToExisting": true
        },
        "tuningConfig": {
          "type": "kafka",
          "partitionsSpec": {
            "type": "dynamic"
          }
        },
        "dataSchema": {
          "dataSource": "networkFlows",
          "timestampSpec": {
            "column": "timestamp_start",
            "format": "auto"
          },
          "dimensionsSpec": {
            "dimensions": [
              {
                "type": "long",
                "name": "iface_in"
              },
              "ip_proto",
              {
                "type": "long",
                "name": "iface_out"
              },
              "ip_src",
              {
                "type": "long",
                "name": "port_dst"
              },
              {
                "type": "long",
                "name": "port_src"
              },
              "ip_dst",
              "event_type",
              "tcp_flags",
              "kafka.timestamp",
              "kafka.topic",
              {
                "type": "long",
                "name": "tos"
              },
              "class",
              {
                "type": "long",
                "name": "timestamp_end"
              },
              "writer_id"
            ]
          },
          "metricsSpec": [
            {
              "type": "longSum",
              "name": "bytes",
              "fieldName": "bytes"
            },
            {
              "type": "longSum",
              "name": "packets",
              "fieldName": "packets"
            }
          ],
          "granularitySpec": {
            "queryGranularity": "none",
            "rollup": false,
            "segmentGranularity": "hour"
          }
        }
      }
    }
