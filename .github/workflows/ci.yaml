name: ci

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

jobs:
  cache-docker-images:
    runs-on: ubuntu-22.04
    steps:
      - name: Cleanup disk to maximize runner disk space
        uses: AdityaGarg8/remove-unwanted-software@v3 #easimon/maximize-build-space@v10
        with:
          remove-android: true
          remove-dotnet: True
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true

      - name: Checkout datahangar
        uses: actions/checkout@v4
        with:
          path: datahangar

      - name: Cache Docker images
        id: docker-cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Cache docker images into a tarball
        run: |
          cd datahangar
          mkdir -p /tmp/.docker
          .github/workflows/files/collect_docker_images.sh . > /tmp/.docker/images_list
          IMAGES=$(cat /tmp/.docker/images_list)
          for IMAGE in ${IMAGES}; do
            docker pull ${IMAGE}
          done
          docker save $(for IMAGE in ${IMAGES}; do echo "${IMAGE} "; done) -o /tmp/.docker/docker_images.tar

      - name: Check available disk space...
        run: |
          df -h

  basic-test:
    needs: [cache-docker-images]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        k8s_version: [v1.27.13, v1.28.9, v1.29.4]
        db: [druid, clickhouse]
    steps:
      - name: Cleanup disk to maximize runner disk space
        uses: AdityaGarg8/remove-unwanted-software@v3 #easimon/maximize-build-space@v10
        with:
          remove-android: true
          remove-dotnet: True
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true

      - name: Checkout datahangar
        uses: actions/checkout@v4
        with:
          path: datahangar

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y jq
          pip install -r datahangar/tools/requirements.txt

      - name: Restore Docker images
        uses: actions/cache@v3
        with:
          path: /tmp/.docker
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Import docker cached images to minikube's registry
        run: |
          docker load -i /tmp/.docker/docker_images.tar
          docker image ls

      - name: Execute the tests
        uses: ./datahangar/.github/actions/test
        with:
          k8s_version: "${{ matrix.k8s_version }}"
          db: "${{ matrix.db }}"
